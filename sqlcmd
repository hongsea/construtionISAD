---create database 
CREATE DATABASE dev_construction
go

---create table user
CREATE TABLE tbUser (id INT PRIMARY KEY IDENTITY (1, 1), staff_name VARCHAR (20), username VARCHAR(20), position VARCHAR (20), password VARCHAR(15));
go

---create table tbRole
create table tbRole (id int identity primary key, position varchar(45) not null);
go
--- insert to table tbRole
insert into tbRole(position) values('Manager');
go

---create table staff
create table tbStaff (id int identity primary key,  name varchar(30) not null, gender varchar(7) not null, nationality  varchar(20) not null,birthday Date, hired_date Date ,salary decimal ,phone varchar(15) not null, address varchar(45) not null, photo varbinary(MAX),role_id int not null references tbRole(id), status varchar(10));
go

---create table tbUser
insert into tbUser(staff_name, username,position,password) VALUES('Heng Hongsea', 'hongsea','Manager', 'admin');
go


---create table tbWorker
create table tbWorker (id int identity primary key, name varchar(30) not null, gender varchar(7) not null,birthday Date not null, hired_date Date not null,salary decimal not null ,phone varchar(15) not null, address varchar(45) not null, photo varbinary(MAX),role_id int not null references tbRole(id),staff_id int not null references tbStaff(id), status varchar(10));
go

---create table tbCustomer
CREATE TABLE tbCustomer (
id INT PRIMARY KEY IDENTITY(1,1),
name VARCHAR(45) NOT NULL,
gender VARCHAR(10) NOT NULL,
phone VARCHAR(15),
address VARCHAR(45),
staff_id int not null references tbStaff(id)
);

---create tabole tbPayment
CREATE TABLE tbPayment (
id INT PRIMARY KEY IDENTITY (1,1),
payment_date DATE NOT NULL,
paid_amount DECIMAL NOT NULL,
customer_id INT NOT NULL,
FOREIGN KEY (customer_id) REFERENCES tbCustomer(id),
staff_id INT NOT NULL,
FOREIGN KEY (staff_id) REFERENCES tbStaff (id),
);
go

--- create table tbSupplier
CREATE TABLE tbSupplier (
id INT PRIMARY KEY IDENTITY ( 1, 1),
name VARCHAR(45) NOT NULL,
gender VARCHAR(45) NOT NULL,
phone VARCHAR(15) NOT NULL,
address VARCHAR(50) NOT NULL,
);
go

--- create table tbImport
CREATE TABLE tbImport (
id INT PRIMARY KEY IDENTITY (1,1),
import_date DATE NOT NULL,
total_amount DECIMAL NOT NULL, 
stock_qty INT NOT NULL,
unit_price DECIMAL NOT NULL,
staff_id INT NOT NULL,
FOREIGN KEY (staff_id) REFERENCES tbStaff(id),
supplier_id INT NOT NULL,
FOREIGN KEY (supplier_id) REFERENCES tbSupplier(id)
)
go

--- create table tbImportDetail
CREATE TABLE tbImportDetail (
id INT PRIMARY KEY IDENTITY (1,1),
import_qty INT NOT NULL, 
unit_price DECIMAL NOT NULL,
amount DECIMAL NOT NULL,
import_id INT NOT NULL,
FOREIGN KEY (import_id) REFERENCES tbImport (id),
CE_id INT NOT NULL,
FOREIGN KEY (CE_id) REFERENCES tbCustractionEquipment (id)
);
go

--- create table tbConstractionEquipment
CREATE TABLE tbCustractionEquipment (
id INT PRIMARY KEY IDENTITY (1,1),
name VARCHAR(45) NOT NULL,
stock_qty INT NOT NULL,
unit_price DECIMAL NOT NULL
)
go

--- create table tbUsage
CREATE TABLE tbUsage (
id INT PRIMARY KEY IDENTITY (1,1),
CE_name VARCHAR(45) NOT NULL,
stock_qty INT NOT NULL,
staff_id INT NOT NULL,
FOREIGN KEY (staff_id) REFERENCES tbStaff (id),
CE_id INT NOT NULL,
FOREIGN KEY (CE_id) REFERENCES tbCustractionEquipment(id),
);
go

--- create table tbUsageDetail
CREATE TABLE tbUsageDetail (
id INT PRIMARY KEY IDENTITY (1,1),
total_qty DECIMAL NOT NULL,
CE_id INT NOT NULL,
FOREIGN KEY (CE_id) REFERENCES tbCustractionEquipment(id),
);
go

--- create table tbProjectInformation
CREATE TABLE tbProjectInformation(
id INT PRIMARY KEY IDENTITY (1,1),
path VARCHAR(45) NOT NULL,
file_name VARCHAR(45) NOT NULL
customer_id INT NOT NULL,
FOREIGN KEY (customer_id) REFERENCES tbCustomer(id),
);
go

--- create tabel tbPayment
CREATE TABLE tbPayment (
id INT PRIMARY KEY IDENTITY (1,1),
payment_date DATE NOT NULL,
paid_amount DECIMAL NOT NULL,
customer_id INT NOT NULL,
FOREIGN KEY (customer_id) REFERENCES tbCustomer(id),
staff_id INT NOT NULL,
FOREIGN KEY (staff_id) REFERENCES tbStaff (id),
);
go

--- create tabel tbInvoice
CREATE TABLE tbInvoice (
id INT PRIMARY KEY IDENTITY (1,1),
total_amount DECIMAL NOT NULL,
paid_amount DECIMAL NOT NULL,
owes_amount DECIMAL NOT NULL,
invoice_date DATE NOT NULL,
staff_id INT NOT NULL,
FOREIGN KEY (staff_id) REFERENCES tbStaff(id),
customer_id INT NOT NULL,
FOREIGN KEY (customer_id) REFERENCES tbCustomer(id),
payment_id INT NOT NULL,
FOREIGN KEY (payment_id) REFERENCES tbPayment(id),
);
go

--- create table tbProjectPlan
CREATE TABLE tbProjectPlan (
id INT PRIMARY KEY IDENTITY (1,1),
projectplan_name VARCHAR (60) NOT NULL,
location VARCHAR (100) NOT NULL,
status VARCHAR (15) NOT NULL,
timeline DATE NOT NULL,
projectinformation_id INT NOT NULL,
FOREIGN KEY (projectinformation_id) REFERENCES tbProjectInformation(id),
);
go

--- create table tbProjectPlanList
CREATE TABLE tbProjectPlanList(
id INT PRIMARY KEY IDENTITY (1,1),
projectplanlist_name VARCHAR (60) NOT NULL,
status VARCHAR (15) NOT NULL,
start_date DATE NOT NULL,
finish_date DATE NOT NULL,
projectplan_id INT NOT NULL,
FOREIGN KEY (projectplan_id) REFERENCES tbProjectPlan(id),
staff_id INT NOT NULL,
FOREIGN KEY (staff_id) REFERENCES tbStaff(id),
);
go

---create table tbProjectPlanListDetail
CREATE TABLE tbProjectPlanListDetail (
id INT PRIMARY KEY IDENTITY (1,1),
projectplanlistDetail_name VARCHAR (60) NOT NULL,
dateline DATE NOT NULL,
projectplanlist_id INT NOT NULL,
FOREIGN KEY (projectplanlist_id) REFERENCES tbProjectPlanList(id),
);
go